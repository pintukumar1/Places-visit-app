{"version":3,"file":"static/js/103.28181594.chunk.js","mappings":"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","sources":["shared/Util/validators.js","../node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js","shared/components/FormElements/ImageUpload.js","shared/components/FormElements/Input.js","webpack://frontend/./src/shared/components/UIElements/Card.module.css?5bd3","shared/components/UIElements/Card.js","shared/components/UIElements/ErrorModal.js","shared/components/UIElements/Modal.js","shared/hooks/form-hook.js","shared/hooks/http-hook.js","webpack://frontend/./src/user/pages/Auth.module.css?fdd2","user/pages/Auth.js"],"sourcesContent":["const VALIDATOR_TYPE_REQUIRE = 'REQUIRE';\nconst VALIDATOR_TYPE_MINLENGTH = 'MINLENGTH';\nconst VALIDATOR_TYPE_MAXLENGTH = 'MAXLENGTH';\nconst VALIDATOR_TYPE_MIN = 'MIN';\nconst VALIDATOR_TYPE_MAX = 'MAX';\nconst VALIDATOR_TYPE_EMAIL = 'EMAIL';\nconst VALIDATOR_TYPE_FILE = 'FILE';\n\nexport const VALIDATOR_REQUIRE = () => ({ type: VALIDATOR_TYPE_REQUIRE });\nexport const VALIDATOR_FILE = () => ({ type: VALIDATOR_TYPE_FILE });\nexport const VALIDATOR_MINLENGTH = val => ({\n  type: VALIDATOR_TYPE_MINLENGTH,\n  val: val\n});\nexport const VALIDATOR_MAXLENGTH = val => ({\n  type: VALIDATOR_TYPE_MAXLENGTH,\n  val: val\n});\nexport const VALIDATOR_MIN = val => ({ type: VALIDATOR_TYPE_MIN, val: val });\nexport const VALIDATOR_MAX = val => ({ type: VALIDATOR_TYPE_MAX, val: val });\nexport const VALIDATOR_EMAIL = () => ({ type: VALIDATOR_TYPE_EMAIL });\n\nexport const validate = (value, validators) => {\n  let isValid = true;\n  for (const validator of validators) {\n    if (validator.type === VALIDATOR_TYPE_REQUIRE) {\n      isValid = isValid && value.trim().length > 0;\n    }\n    if (validator.type === VALIDATOR_TYPE_MINLENGTH) {\n      isValid = isValid && value.trim().length >= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_MAXLENGTH) {\n      isValid = isValid && value.trim().length <= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_MIN) {\n      isValid = isValid && +value >= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_MAX) {\n      isValid = isValid && +value <= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_EMAIL) {\n      isValid = isValid && /^\\S+@\\S+\\.\\S+$/.test(value);\n    }\n  }\n  return isValid;\n};\n","import unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nexport default function _createForOfIteratorHelper(o, allowArrayLike) {\n  var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"];\n\n  if (!it) {\n    if (Array.isArray(o) || (it = unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n\n      var F = function F() {};\n\n      return {\n        s: F,\n        n: function n() {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function e(_e) {\n          throw _e;\n        },\n        f: F\n      };\n    }\n\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n\n  var normalCompletion = true,\n      didErr = false,\n      err;\n  return {\n    s: function s() {\n      it = it.call(o);\n    },\n    n: function n() {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function e(_e2) {\n      didErr = true;\n      err = _e2;\n    },\n    f: function f() {\n      try {\n        if (!normalCompletion && it[\"return\"] != null) it[\"return\"]();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}","import React, { useEffect, useRef, useState } from 'react'\r\nimport Button from '../FormElements/Button';\r\nimport './ImageUpload.css'\r\n\r\nfunction ImageUpload(props) {\r\n    const [file, setFile] = useState()\r\n    const [previewUrl, setPreviewUrl] = useState()\r\n    const [isValid, setIsValid] = useState(false)\r\n\r\n    const filePickerRef = useRef()\r\n\r\n    useEffect(() => {\r\n        if(!file) {\r\n            return\r\n        } \r\n        const fileReader = new FileReader()\r\n        fileReader.onload = () => {\r\n            setPreviewUrl(fileReader.result)\r\n        }\r\n        fileReader.readAsDataURL(file)\r\n    }, [file])\r\n\r\n    const pickedHandler = (event) => {\r\n        let pickedFile;\r\n        let fileIsValid = isValid\r\n        if(event.target.files && event.target.files.length === 1){\r\n            pickedFile = event.target.files[0]\r\n            setFile(pickedFile)\r\n            setIsValid(true)\r\n            fileIsValid = true \r\n        } else {\r\n            setIsValid(false);\r\n            fileIsValid = false \r\n        }\r\n        props.onInput(props.id, pickedFile, fileIsValid)\r\n    }\r\n\r\n    const pickImageHandler = () => {\r\n        filePickerRef.current.click()\r\n    }\r\n\r\n    return (\r\n        <div className=\"form-control\">\r\n            <input\r\n                id={props.id}\r\n                ref={filePickerRef}\r\n                style={{ display: 'none' }}\r\n                type=\"file\"\r\n                accept=\".jpg, .png, .jpeg\"\r\n                onChange={pickedHandler}\r\n            />\r\n            <div className={`image-upload ${props.center && 'center'}`}>\r\n                <div className=\"image-upload__preview\">\r\n                    {previewUrl && <img src={previewUrl} alt=\"Preview\" /> }\r\n                    {!previewUrl &&  <p>Please pick an image.</p>}\r\n                </div>\r\n                <Button type=\"button\" onClick={pickImageHandler}>PICK IMAGE</Button>\r\n            </div>\r\n            {!isValid && <p>{props.errorText}</p>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ImageUpload","import React, { useReducer, useEffect } from 'react'\r\nimport { validate } from '../../Util/validators'\r\nimport './Input.css'\r\n\r\nconst inputReducer = (state, action) => {\r\n    switch (action.type) {\r\n        case \"CHANGE\":\r\n            return {\r\n                ...state,\r\n                value: action.val,\r\n                isValid: validate(action.val, action.validators)\r\n            }\r\n        case \"TOUCH\":\r\n            return {\r\n                ...state,\r\n                isTouched: true\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nfunction Input(props) {\r\n    const [inputState, dispatch] = useReducer(inputReducer, {\r\n        value: props.initialValue || \"\",\r\n        isTouched: false,\r\n        isValid: props.initialValid || false\r\n    })\r\n\r\n    const { id, onInput } = props\r\n    const { value, isValid } = inputState\r\n\r\n    useEffect(() => {\r\n        onInput(id, value, isValid)\r\n    }, [id, value, isValid, onInput])\r\n\r\n    const changeHandler = event => {\r\n        dispatch({\r\n            type: \"CHANGE\",\r\n            val: event.target.value,\r\n            validators: props.validators\r\n        })\r\n    }\r\n\r\n    const touchHandler = () => {\r\n        dispatch({\r\n            type: \"TOUCH\"\r\n        })\r\n    }\r\n\r\n    const element =\r\n        props.element === \"input\" ? (\r\n            <input\r\n                id={props.id}\r\n                type={props.type}\r\n                placeholder={props.placeholder}\r\n                onChange={changeHandler}\r\n                onBlur={touchHandler}\r\n                value={inputState.value}\r\n            />\r\n        ) : (\r\n            <textarea\r\n                id={props.type}\r\n                rows={props.rows || 3}\r\n                onChange={changeHandler}\r\n                onBlur={touchHandler}\r\n                value={inputState.value}\r\n            />\r\n        );\r\n\r\n    return (\r\n        <div className={`form-control ${!inputState.isValid && inputState.isTouched && 'form-control--invalid'}`}>\r\n            <label htmlFor={props.id}>{props.label}</label>\r\n            {element}\r\n            {!inputState.isValid && inputState.isTouched && <p>{props.errorText}</p>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Input","// extracted by mini-css-extract-plugin\nexport default {\"card\":\"Card_card__-0OQC\"};","import React from 'react';\n\nimport classes from './Card.module.css';\n\nconst Card = props => {\n  return (\n    <div className={`${classes.card} ${props.className}`} style={props.style}>\n      {props.children}\n    </div>\n  );\n};\n\nexport default Card;\n","import React from 'react';\n\nimport Modal from './Modal';\nimport Button from '../FormElements/Button';\n\nconst ErrorModal = props => {\n  return (\n    <Modal\n      onCancel={props.onClear}\n      header=\"An Error Occurred!\"\n      show={!!props.error}\n      footer={<Button onClick={props.onClear}>Okay</Button>}\n    >\n      <p>{props.error}</p>\n    </Modal>\n  );\n};\n\nexport default ErrorModal;\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport Backdrop from './Backdrop'\r\nimport { CSSTransition } from 'react-transition-group'\r\nimport './Modal.css'\r\n\r\nconst ModalOverlay = props => {\r\n    const content = (\r\n        <div className={`modal ${props.className}`} style={props.style}>\r\n            <header className={`modal__header ${props.headerClass}`}>\r\n                <h2>{props.header}</h2>\r\n            </header>\r\n            <form\r\n                onSubmit={\r\n                    props.onSubmit ? props.onSubmit : event => event.preventDefault()\r\n                }\r\n            >\r\n                <div className={`modal__content ${props.contentClass}`}>\r\n                    {props.children}\r\n                </div>\r\n                <footer className={`modal__footer ${props.footerClass}`}>\r\n                    {props.footer}\r\n                </footer>\r\n            </form>\r\n        </div>\r\n    )\r\n    return ReactDOM.createPortal(content, document.getElementById(\"modal-hook\"))\r\n}\r\n\r\nfunction Modal(props) {\r\n    return <React.Fragment>\r\n        {props.show && <Backdrop onClick={props.onCancel} />}\r\n        <CSSTransition\r\n            in={props.show}\r\n            mountOnEnter\r\n            unmountOnExit\r\n            timeout={200}\r\n            classNames=\"modal\">\r\n            <ModalOverlay {...props} />\r\n        </CSSTransition>\r\n    </React.Fragment>\r\n}\r\n\r\nexport default Modal","import { useCallback, useReducer } from 'react';\r\n\r\nconst formReducer = (state, action) => {\r\n  switch (action.type) {\r\n    case 'INPUT_CHANGE':\r\n      let formIsValid = true;\r\n      for (const inputId in state.inputs) {\r\n        if (!state.inputs[inputId]) {\r\n          continue;\r\n        }\r\n        if (inputId === action.inputId) {\r\n          formIsValid = formIsValid && action.isValid;\r\n        } else {\r\n          formIsValid = formIsValid && state.inputs[inputId].isValid;\r\n        }\r\n      }\r\n      return {\r\n        ...state,\r\n        inputs: {\r\n          ...state.inputs,\r\n          [action.inputId]: { value: action.value, isValid: action.isValid }\r\n        },\r\n        isValid: formIsValid\r\n      };\r\n    case 'SET_DATA':\r\n      return {\r\n        inputs: action.inputs,\r\n        isValid: action.formIsValid\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const useForm = (initialInputs, initialFormValidity) => {\r\n  const [formState, dispatch] = useReducer(formReducer, {\r\n    inputs: initialInputs,\r\n    isValid: initialFormValidity\r\n  });\r\n\r\n  const inputHandler = useCallback((id, value, isValid) => {\r\n    dispatch({\r\n      type: 'INPUT_CHANGE',\r\n      value: value,\r\n      isValid: isValid,\r\n      inputId: id\r\n    });\r\n  }, []);\r\n\r\n  const setFormData = useCallback((inputData, formValidity) => {\r\n    dispatch({\r\n      type: 'SET_DATA',\r\n      inputs: inputData,\r\n      formIsValid: formValidity\r\n    });\r\n  }, []);\r\n\r\n  return [formState, inputHandler, setFormData];\r\n};","import { useState, useCallback, useRef, useEffect } from 'react';\r\n\r\nexport const useHttpClient = () => {\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [error, setError] = useState();\r\n\r\n  const activeHttpRequests = useRef([]);\r\n\r\n  const sendRequest = useCallback(\r\n    async (url, method = 'GET', body = null, headers = {}) => {\r\n      setIsLoading(true);\r\n      const httpAbortCtrl = new AbortController();\r\n      activeHttpRequests.current.push(httpAbortCtrl);\r\n\r\n      try {\r\n        const response = await fetch(url, {\r\n          method,\r\n          body,\r\n          headers,\r\n          signal: httpAbortCtrl.signal\r\n        });\r\n\r\n        const responseData = await response.json();\r\n\r\n        activeHttpRequests.current = activeHttpRequests.current.filter(\r\n          reqCtrl => reqCtrl !== httpAbortCtrl\r\n        );\r\n\r\n        if (!response.ok) {\r\n          throw new Error(responseData.message);\r\n        }\r\n\r\n        setIsLoading(false);\r\n        return responseData;\r\n      } catch (err) {\r\n        setError(err.message);\r\n        setIsLoading(false);\r\n        throw err;\r\n      }\r\n    },\r\n    []\r\n  );\r\n\r\n  const clearError = () => {\r\n    setError(null);\r\n  };\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      // eslint-disable-next-line react-hooks/exhaustive-deps\r\n      activeHttpRequests.current.forEach(abortCtrl => abortCtrl.abort());\r\n    };\r\n  }, []);\r\n\r\n  return { isLoading, error, sendRequest, clearError };\r\n};\r\n","// extracted by mini-css-extract-plugin\nexport default {\"authentication__header\":\"Auth_authentication__header__TOHv2\",\"authentication\":\"Auth_authentication__BP5Vw\"};","import React, { useState, useContext } from 'react';\r\n\r\nimport Card from '../../shared/components/UIElements/Card';\r\nimport Input from '../../shared/components/FormElements/Input';\r\nimport Button from '../../shared/components/FormElements/Button';\r\nimport ErrorModal from '../../shared/components/UIElements/ErrorModal';\r\nimport LoadingSpinner from '../../shared/components/UIElements/LoadingSpinner';\r\nimport ImageUpload from '../../shared/components/FormElements/ImageUpload';\r\nimport {\r\n  VALIDATOR_EMAIL,\r\n  VALIDATOR_MINLENGTH,\r\n  VALIDATOR_REQUIRE\r\n} from '../../shared/Util/validators';\r\nimport { useForm } from '../../shared/hooks/form-hook';\r\nimport { useHttpClient } from '../../shared/hooks/http-hook';\r\nimport { AuthContext } from '../../shared/context/auth-context';\r\nimport classes from './Auth.module.css';\r\n\r\nconst Auth = () => {\r\n  const auth = useContext(AuthContext);\r\n  const [isLoginMode, setIsLoginMode] = useState(true);\r\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\r\n\r\n  const [formState, inputHandler, setFormData] = useForm(\r\n    {\r\n      email: {\r\n        value: '',\r\n        isValid: false\r\n      },\r\n      password: {\r\n        value: '',\r\n        isValid: false\r\n      }\r\n    },\r\n    false\r\n  );\r\n\r\n  const switchModeHandler = () => {\r\n    if (!isLoginMode) {\r\n      setFormData(\r\n        {\r\n          ...formState.inputs,\r\n          name: undefined,\r\n          image: undefined\r\n        },\r\n        formState.inputs.email.isValid && formState.inputs.password.isValid\r\n      );\r\n    } else {\r\n      setFormData(\r\n        {\r\n          ...formState.inputs,\r\n          name: {\r\n            value: '',\r\n            isValid: false\r\n          },\r\n          image: {\r\n            value: null,\r\n            isValid: false\r\n          }\r\n        },\r\n        false\r\n      );\r\n    }\r\n    setIsLoginMode(prevMode => !prevMode);\r\n  };\r\n\r\n  const authSubmitHandler = async event => {\r\n    event.preventDefault();\r\n\r\n    if (isLoginMode) {\r\n      try {\r\n        const responseData = await sendRequest(\r\n          process.env.REACT_APP_BACKEND_URL + \"/users/login\",\r\n          'POST',\r\n          JSON.stringify({\r\n            email: formState.inputs.email.value,\r\n            password: formState.inputs.password.value\r\n          }),\r\n          {\r\n            'Content-Type': 'application/json'\r\n          }\r\n        );\r\n        auth.login(responseData.userId, responseData.token);\r\n      } catch (err) { }\r\n    } else {\r\n      try {\r\n        const formData = new FormData();\r\n        formData.append('email', formState.inputs.email.value);\r\n        formData.append('name', formState.inputs.name.value);\r\n        formData.append('password', formState.inputs.password.value);\r\n        formData.append('image', formState.inputs.image.value);\r\n        const responseData = await sendRequest(\r\n          process.env.REACT_APP_BACKEND_URL + \"/users/signup\",\r\n          'POST',\r\n          formData\r\n        );\r\n\r\n        auth.login(responseData.userId, responseData.token);\r\n      } catch (err) { }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <ErrorModal error={error} onClear={clearError} />\r\n      <Card className={classes[\"authentication\"]}>\r\n        {isLoading && <LoadingSpinner asOverlay />}\r\n        <h2>Login Required</h2>\r\n        <hr />\r\n        <form onSubmit={authSubmitHandler}>\r\n          {!isLoginMode && (\r\n            <Input\r\n              element=\"input\"\r\n              id=\"name\"\r\n              type=\"text\"\r\n              label=\"Your Name\"\r\n              validators={[VALIDATOR_REQUIRE()]}\r\n              errorText=\"Please enter a name.\"\r\n              onInput={inputHandler}\r\n            />\r\n          )}\r\n          {!isLoginMode && (\r\n            <ImageUpload\r\n              center\r\n              id=\"image\"\r\n              onInput={inputHandler}\r\n              errorText=\"Please provide an image.\"\r\n            />\r\n          )}\r\n          <Input\r\n            element=\"input\"\r\n            id=\"email\"\r\n            type=\"email\"\r\n            label=\"E-Mail\"\r\n            validators={[VALIDATOR_EMAIL()]}\r\n            errorText=\"Please enter a valid email address.\"\r\n            onInput={inputHandler}\r\n          />\r\n          <Input\r\n            element=\"input\"\r\n            id=\"password\"\r\n            type=\"password\"\r\n            label=\"Password\"\r\n            validators={[VALIDATOR_MINLENGTH(6)]}\r\n            errorText=\"Please enter a valid password, at least 6 characters.\"\r\n            onInput={inputHandler}\r\n          />\r\n          <Button type=\"submit\" disabled={!formState.isValid}>\r\n            {isLoginMode ? 'LOGIN' : 'SIGNUP'}\r\n          </Button>\r\n        </form>\r\n        <Button inverse onClick={switchModeHandler}>\r\n          SWITCH TO {isLoginMode ? 'SIGNUP' : 'LOGIN'}\r\n        </Button>\r\n      </Card>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default Auth;\r\n"],"names":["VALIDATOR_TYPE_REQUIRE","VALIDATOR_TYPE_MINLENGTH","VALIDATOR_TYPE_MAXLENGTH","VALIDATOR_TYPE_EMAIL","VALIDATOR_REQUIRE","type","VALIDATOR_MINLENGTH","val","VALIDATOR_EMAIL","validate","value","validators","isValid","o","allowArrayLike","it","Symbol","iterator","Array","isArray","unsupportedIterableToArray","length","i","F","s","n","done","e","_e","f","TypeError","err","normalCompletion","didErr","call","step","next","_e2","validator","trim","test","props","useState","file","setFile","previewUrl","setPreviewUrl","setIsValid","filePickerRef","useRef","useEffect","fileReader","FileReader","onload","result","readAsDataURL","className","id","ref","style","display","accept","onChange","event","pickedFile","fileIsValid","target","files","onInput","center","src","alt","Button","onClick","current","click","errorText","inputReducer","state","action","isTouched","useReducer","initialValue","initialValid","inputState","dispatch","changeHandler","touchHandler","element","placeholder","onBlur","rows","htmlFor","label","classes","children","onCancel","onClear","header","show","error","footer","ModalOverlay","content","headerClass","onSubmit","preventDefault","contentClass","footerClass","ReactDOM","document","getElementById","Backdrop","CSSTransition","in","mountOnEnter","unmountOnExit","timeout","classNames","formReducer","formIsValid","inputId","inputs","useForm","initialInputs","initialFormValidity","formState","useCallback","inputData","formValidity","useHttpClient","isLoading","setIsLoading","setError","activeHttpRequests","sendRequest","url","method","body","headers","httpAbortCtrl","AbortController","push","fetch","signal","response","json","responseData","filter","reqCtrl","ok","Error","message","forEach","abortCtrl","abort","clearError","auth","useContext","AuthContext","isLoginMode","setIsLoginMode","email","password","inputHandler","setFormData","authSubmitHandler","process","JSON","stringify","login","userId","token","formData","FormData","append","name","image","ErrorModal","Card","LoadingSpinner","asOverlay","Input","ImageUpload","disabled","inverse","undefined","prevMode"],"sourceRoot":""}