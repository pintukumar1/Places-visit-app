{"version":3,"file":"static/js/925.543a696a.chunk.js","mappings":"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","sources":["places/pages/UpdatePlace.js","shared/Util/validators.js","../node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js","shared/components/FormElements/Input.js","webpack://frontend/./src/shared/components/UIElements/Card.module.css?5bd3","shared/components/UIElements/Card.js","shared/components/UIElements/ErrorModal.js","shared/components/UIElements/Modal.js","shared/hooks/form-hook.js","shared/hooks/http-hook.js","webpack://frontend/./src/places/pages/PlaceForm.module.css?3c5d"],"sourcesContent":["import React, { useContext, useEffect, useState } from 'react'\r\nimport { useParams, useNavigate } from 'react-router-dom'\r\nimport Input from '../../shared/components/FormElements/Input';\r\nimport Card from '../../shared/components/UIElements/Card';\r\nimport Button from '../../shared/components/FormElements/Button';\r\nimport LoadingSpinner from '../../shared/components/UIElements/LoadingSpinner'\r\nimport ErrorModal from '../../shared/components/UIElements/ErrorModal'\r\nimport { VALIDATOR_MINLENGTH, VALIDATOR_REQUIRE } from '../../shared/Util/validators';\r\nimport classes from './PlaceForm.module.css'\r\nimport { useForm } from '../../shared/hooks/form-hook';\r\nimport { useHttpClient } from '../../shared/hooks/http-hook'\r\nimport { AuthContext } from \"../../shared/context/auth-context\"\r\n\r\nfunction UpdatePlace() {\r\n    const auth = useContext(AuthContext)\r\n    const { isLoading, error, sendRequest, clearError } = useHttpClient()\r\n    const [loadedPlace, setLoadedPlace] = useState()\r\n\r\n    const navigate = useNavigate();\r\n    const placeId = useParams().placeId;\r\n\r\n    const [formState, inputHandler, setFormData] = useForm(\r\n        {\r\n            title: {\r\n                value: '',\r\n                isValid: false\r\n            },\r\n            description: {\r\n                value: '',\r\n                isValid: false\r\n            },\r\n        }, false)\r\n\r\n    useEffect(() => {\r\n        const fetchPlace = async () => {\r\n            try {\r\n                const responseData = await sendRequest(`${process.env.REACT_APP_BACKEND_URL}/places/${placeId}`)\r\n                setLoadedPlace(responseData.place);\r\n                setFormData(\r\n                    {\r\n                        title: {\r\n                            value: responseData.place.title,\r\n                            isValid: true\r\n                        },\r\n                        description: {\r\n                            value: responseData.place.description,\r\n                            isValid: true\r\n                        }\r\n                    }, true\r\n                )\r\n            } catch (err) { }\r\n        }\r\n        fetchPlace();\r\n    }, [sendRequest, placeId, setFormData, navigate])\r\n\r\n\r\n    const updatePlaceSubmitHandler = async (event) => {\r\n        event.preventDefault();\r\n        try {\r\n            await sendRequest(`${process.env.REACT_APP_BACKEND_URL}/places/${placeId}`, \"PATCH\",\r\n                JSON.stringify({\r\n                    title: formState.inputs.title.value,\r\n                    description: formState.inputs.description.value\r\n                }),\r\n                {\r\n                    \"Content-Type\": \"Application/json\",\r\n                    Authorization: \"Bearer \" + auth.token\r\n                }\r\n            )\r\n            navigate(\"/\" + auth.userId + \"/places\")\r\n        } catch (err) { }\r\n\r\n    }\r\n\r\n\r\n    if (isLoading) {\r\n        return (\r\n            <div className=\"center\">\r\n                <LoadingSpinner />\r\n            </div>\r\n        )\r\n    }\r\n\r\n    if (!loadedPlace && !error) {\r\n        return (\r\n            <div className=\"center\">\r\n                <Card>\r\n                    <h2>Could not find place!</h2>\r\n                </Card>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <ErrorModal error={error} onClear={clearError} />\r\n            {!isLoading && loadedPlace && <form className={classes[\"place-form\"]} onSubmit={updatePlaceSubmitHandler}>\r\n                <Input\r\n                    id=\"title\"\r\n                    element=\"input\"\r\n                    type=\"text\"\r\n                    label=\"Title\"\r\n                    validators={[VALIDATOR_REQUIRE()]}\r\n                    errorText=\"Please enter a valid title.\"\r\n                    onInput={inputHandler}\r\n                    initialValue={loadedPlace.title}\r\n                    initialValid={true}\r\n                />\r\n                <Input\r\n                    id=\"description\"\r\n                    element=\"textarea\"\r\n                    label=\"Description\"\r\n                    validators={[VALIDATOR_MINLENGTH(5)]}\r\n                    errorText=\"Please enter a valid description(minimum 5 characters)\"\r\n                    onInput={inputHandler}\r\n                    initialValue={loadedPlace.description}\r\n                    initialValid={true}\r\n                />\r\n                <Button type=\"submit\" disabled={!formState.isValid}>\r\n                    UPDATE PLACE\r\n                </Button>\r\n            </form>}\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default UpdatePlace","const VALIDATOR_TYPE_REQUIRE = 'REQUIRE';\nconst VALIDATOR_TYPE_MINLENGTH = 'MINLENGTH';\nconst VALIDATOR_TYPE_MAXLENGTH = 'MAXLENGTH';\nconst VALIDATOR_TYPE_MIN = 'MIN';\nconst VALIDATOR_TYPE_MAX = 'MAX';\nconst VALIDATOR_TYPE_EMAIL = 'EMAIL';\nconst VALIDATOR_TYPE_FILE = 'FILE';\n\nexport const VALIDATOR_REQUIRE = () => ({ type: VALIDATOR_TYPE_REQUIRE });\nexport const VALIDATOR_FILE = () => ({ type: VALIDATOR_TYPE_FILE });\nexport const VALIDATOR_MINLENGTH = val => ({\n  type: VALIDATOR_TYPE_MINLENGTH,\n  val: val\n});\nexport const VALIDATOR_MAXLENGTH = val => ({\n  type: VALIDATOR_TYPE_MAXLENGTH,\n  val: val\n});\nexport const VALIDATOR_MIN = val => ({ type: VALIDATOR_TYPE_MIN, val: val });\nexport const VALIDATOR_MAX = val => ({ type: VALIDATOR_TYPE_MAX, val: val });\nexport const VALIDATOR_EMAIL = () => ({ type: VALIDATOR_TYPE_EMAIL });\n\nexport const validate = (value, validators) => {\n  let isValid = true;\n  for (const validator of validators) {\n    if (validator.type === VALIDATOR_TYPE_REQUIRE) {\n      isValid = isValid && value.trim().length > 0;\n    }\n    if (validator.type === VALIDATOR_TYPE_MINLENGTH) {\n      isValid = isValid && value.trim().length >= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_MAXLENGTH) {\n      isValid = isValid && value.trim().length <= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_MIN) {\n      isValid = isValid && +value >= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_MAX) {\n      isValid = isValid && +value <= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_EMAIL) {\n      isValid = isValid && /^\\S+@\\S+\\.\\S+$/.test(value);\n    }\n  }\n  return isValid;\n};\n","import unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nexport default function _createForOfIteratorHelper(o, allowArrayLike) {\n  var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"];\n\n  if (!it) {\n    if (Array.isArray(o) || (it = unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n\n      var F = function F() {};\n\n      return {\n        s: F,\n        n: function n() {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function e(_e) {\n          throw _e;\n        },\n        f: F\n      };\n    }\n\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n\n  var normalCompletion = true,\n      didErr = false,\n      err;\n  return {\n    s: function s() {\n      it = it.call(o);\n    },\n    n: function n() {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function e(_e2) {\n      didErr = true;\n      err = _e2;\n    },\n    f: function f() {\n      try {\n        if (!normalCompletion && it[\"return\"] != null) it[\"return\"]();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}","import React, { useReducer, useEffect } from 'react'\r\nimport { validate } from '../../Util/validators'\r\nimport './Input.css'\r\n\r\nconst inputReducer = (state, action) => {\r\n    switch (action.type) {\r\n        case \"CHANGE\":\r\n            return {\r\n                ...state,\r\n                value: action.val,\r\n                isValid: validate(action.val, action.validators)\r\n            }\r\n        case \"TOUCH\":\r\n            return {\r\n                ...state,\r\n                isTouched: true\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nfunction Input(props) {\r\n    const [inputState, dispatch] = useReducer(inputReducer, {\r\n        value: props.initialValue || \"\",\r\n        isTouched: false,\r\n        isValid: props.initialValid || false\r\n    })\r\n\r\n    const { id, onInput } = props\r\n    const { value, isValid } = inputState\r\n\r\n    useEffect(() => {\r\n        onInput(id, value, isValid)\r\n    }, [id, value, isValid, onInput])\r\n\r\n    const changeHandler = event => {\r\n        dispatch({\r\n            type: \"CHANGE\",\r\n            val: event.target.value,\r\n            validators: props.validators\r\n        })\r\n    }\r\n\r\n    const touchHandler = () => {\r\n        dispatch({\r\n            type: \"TOUCH\"\r\n        })\r\n    }\r\n\r\n    const element =\r\n        props.element === \"input\" ? (\r\n            <input\r\n                id={props.id}\r\n                type={props.type}\r\n                placeholder={props.placeholder}\r\n                onChange={changeHandler}\r\n                onBlur={touchHandler}\r\n                value={inputState.value}\r\n            />\r\n        ) : (\r\n            <textarea\r\n                id={props.type}\r\n                rows={props.rows || 3}\r\n                onChange={changeHandler}\r\n                onBlur={touchHandler}\r\n                value={inputState.value}\r\n            />\r\n        );\r\n\r\n    return (\r\n        <div className={`form-control ${!inputState.isValid && inputState.isTouched && 'form-control--invalid'}`}>\r\n            <label htmlFor={props.id}>{props.label}</label>\r\n            {element}\r\n            {!inputState.isValid && inputState.isTouched && <p>{props.errorText}</p>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Input","// extracted by mini-css-extract-plugin\nexport default {\"card\":\"Card_card__-0OQC\"};","import React from 'react';\n\nimport classes from './Card.module.css';\n\nconst Card = props => {\n  return (\n    <div className={`${classes.card} ${props.className}`} style={props.style}>\n      {props.children}\n    </div>\n  );\n};\n\nexport default Card;\n","import React from 'react';\n\nimport Modal from './Modal';\nimport Button from '../FormElements/Button';\n\nconst ErrorModal = props => {\n  return (\n    <Modal\n      onCancel={props.onClear}\n      header=\"An Error Occurred!\"\n      show={!!props.error}\n      footer={<Button onClick={props.onClear}>Okay</Button>}\n    >\n      <p>{props.error}</p>\n    </Modal>\n  );\n};\n\nexport default ErrorModal;\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport Backdrop from './Backdrop'\r\nimport { CSSTransition } from 'react-transition-group'\r\nimport './Modal.css'\r\n\r\nconst ModalOverlay = props => {\r\n    const content = (\r\n        <div className={`modal ${props.className}`} style={props.style}>\r\n            <header className={`modal__header ${props.headerClass}`}>\r\n                <h2>{props.header}</h2>\r\n            </header>\r\n            <form\r\n                onSubmit={\r\n                    props.onSubmit ? props.onSubmit : event => event.preventDefault()\r\n                }\r\n            >\r\n                <div className={`modal__content ${props.contentClass}`}>\r\n                    {props.children}\r\n                </div>\r\n                <footer className={`modal__footer ${props.footerClass}`}>\r\n                    {props.footer}\r\n                </footer>\r\n            </form>\r\n        </div>\r\n    )\r\n    return ReactDOM.createPortal(content, document.getElementById(\"modal-hook\"))\r\n}\r\n\r\nfunction Modal(props) {\r\n    return <React.Fragment>\r\n        {props.show && <Backdrop onClick={props.onCancel} />}\r\n        <CSSTransition\r\n            in={props.show}\r\n            mountOnEnter\r\n            unmountOnExit\r\n            timeout={200}\r\n            classNames=\"modal\">\r\n            <ModalOverlay {...props} />\r\n        </CSSTransition>\r\n    </React.Fragment>\r\n}\r\n\r\nexport default Modal","import { useCallback, useReducer } from 'react';\r\n\r\nconst formReducer = (state, action) => {\r\n  switch (action.type) {\r\n    case 'INPUT_CHANGE':\r\n      let formIsValid = true;\r\n      for (const inputId in state.inputs) {\r\n        if (!state.inputs[inputId]) {\r\n          continue;\r\n        }\r\n        if (inputId === action.inputId) {\r\n          formIsValid = formIsValid && action.isValid;\r\n        } else {\r\n          formIsValid = formIsValid && state.inputs[inputId].isValid;\r\n        }\r\n      }\r\n      return {\r\n        ...state,\r\n        inputs: {\r\n          ...state.inputs,\r\n          [action.inputId]: { value: action.value, isValid: action.isValid }\r\n        },\r\n        isValid: formIsValid\r\n      };\r\n    case 'SET_DATA':\r\n      return {\r\n        inputs: action.inputs,\r\n        isValid: action.formIsValid\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const useForm = (initialInputs, initialFormValidity) => {\r\n  const [formState, dispatch] = useReducer(formReducer, {\r\n    inputs: initialInputs,\r\n    isValid: initialFormValidity\r\n  });\r\n\r\n  const inputHandler = useCallback((id, value, isValid) => {\r\n    dispatch({\r\n      type: 'INPUT_CHANGE',\r\n      value: value,\r\n      isValid: isValid,\r\n      inputId: id\r\n    });\r\n  }, []);\r\n\r\n  const setFormData = useCallback((inputData, formValidity) => {\r\n    dispatch({\r\n      type: 'SET_DATA',\r\n      inputs: inputData,\r\n      formIsValid: formValidity\r\n    });\r\n  }, []);\r\n\r\n  return [formState, inputHandler, setFormData];\r\n};","import { useState, useCallback, useRef, useEffect } from 'react';\r\n\r\nexport const useHttpClient = () => {\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [error, setError] = useState();\r\n\r\n  const activeHttpRequests = useRef([]);\r\n\r\n  const sendRequest = useCallback(\r\n    async (url, method = 'GET', body = null, headers = {}) => {\r\n      setIsLoading(true);\r\n      const httpAbortCtrl = new AbortController();\r\n      activeHttpRequests.current.push(httpAbortCtrl);\r\n\r\n      try {\r\n        const response = await fetch(url, {\r\n          method,\r\n          body,\r\n          headers,\r\n          signal: httpAbortCtrl.signal\r\n        });\r\n\r\n        const responseData = await response.json();\r\n\r\n        activeHttpRequests.current = activeHttpRequests.current.filter(\r\n          reqCtrl => reqCtrl !== httpAbortCtrl\r\n        );\r\n\r\n        if (!response.ok) {\r\n          throw new Error(responseData.message);\r\n        }\r\n\r\n        setIsLoading(false);\r\n        return responseData;\r\n      } catch (err) {\r\n        setError(err.message);\r\n        setIsLoading(false);\r\n        throw err;\r\n      }\r\n    },\r\n    []\r\n  );\r\n\r\n  const clearError = () => {\r\n    setError(null);\r\n  };\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      // eslint-disable-next-line react-hooks/exhaustive-deps\r\n      activeHttpRequests.current.forEach(abortCtrl => abortCtrl.abort());\r\n    };\r\n  }, []);\r\n\r\n  return { isLoading, error, sendRequest, clearError };\r\n};\r\n","// extracted by mini-css-extract-plugin\nexport default {\"place-form\":\"PlaceForm_place-form__IJcIh\"};"],"names":["auth","useContext","AuthContext","useHttpClient","isLoading","error","sendRequest","clearError","useState","loadedPlace","setLoadedPlace","navigate","useNavigate","placeId","useParams","useForm","title","value","isValid","description","formState","inputHandler","setFormData","useEffect","fetchPlace","process","responseData","place","updatePlaceSubmitHandler","event","preventDefault","JSON","stringify","inputs","Authorization","token","userId","className","onClear","classes","onSubmit","id","element","type","label","validators","VALIDATOR_REQUIRE","errorText","onInput","initialValue","initialValid","VALIDATOR_MINLENGTH","disabled","VALIDATOR_TYPE_REQUIRE","VALIDATOR_TYPE_MINLENGTH","VALIDATOR_TYPE_MAXLENGTH","VALIDATOR_TYPE_EMAIL","val","VALIDATOR_EMAIL","validate","o","allowArrayLike","it","Symbol","iterator","Array","isArray","unsupportedIterableToArray","length","i","F","s","n","done","e","_e","f","TypeError","err","normalCompletion","didErr","call","step","next","_e2","validator","trim","test","inputReducer","state","action","isTouched","props","useReducer","inputState","dispatch","changeHandler","target","touchHandler","placeholder","onChange","onBlur","rows","htmlFor","style","children","onCancel","header","show","footer","onClick","ModalOverlay","content","headerClass","contentClass","footerClass","ReactDOM","document","getElementById","Backdrop","CSSTransition","in","mountOnEnter","unmountOnExit","timeout","classNames","formReducer","formIsValid","inputId","initialInputs","initialFormValidity","useCallback","inputData","formValidity","setIsLoading","setError","activeHttpRequests","useRef","url","method","body","headers","httpAbortCtrl","AbortController","current","push","fetch","signal","response","json","filter","reqCtrl","ok","Error","message","forEach","abortCtrl","abort"],"sourceRoot":""}